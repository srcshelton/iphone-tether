##############################################################################
# INTERFACE HANDLERS
# 

modules="iproute2"

#config_ef0="dhcp"
modules_ef0="!plug"

#config_lxcvh1="172.16.0.1/12"
#routes_lxcvh1="172.16.76.75/32 via 172.16.0.1"
#peer_lxcvh1="lxcvg1"

#config_lxcvg1="null"
#rc_net_lxcvg1_need="net.lxcvh1"

preup() {
	[ -n "${IFACE}" ] || { eend 1 "\$IFACE not defined"; return 1 ; }
	[ "${IFACE}" = "lo" ] && { eend 0 ; return 0 ; }

	if [ ! -d /dev/.udev ]; then
		einfo "Calling 'nameif' to set interface names"
		/sbin/nameif >/dev/null 2>&1
	fi

	local USBMUXD="/usr/sbin/usbmuxd"
	local MUXUSER="usbmux"
	local PAIR="/usr/bin/ipheth-pair"

	case "${IFACE}" in
		iphone*)
			local rc=0

			(( ! rc )) && getent passwd "${MUXUSER}" >/dev/null 2>&1 ; rc=$?
			(( ! rc )) && lsusb | grep -q 'Apple, Inc. $' >/dev/null 2>&1 ; rc=$?
			if (( ! rc )); then
				# This may look messy, but it gets us there...
				local devdir
				if [[ -d "/sys/class/net/${IFACE}/device" ]]; then
					einfo "Found iPhone device data at '/sys/class/net/${IFACE}/device/'"
					devdir="$( readlink -e "$( readlink -e "/sys/class/net/${IFACE}/device/" 2>/dev/null )/.." 2>/dev/null )"
				else
					einfo "Cannot find iPhone device data at '/sys/class/net/${IFACE}/device/' - searching ..."
					local node
					local value
					local -i found=0

					for node in $( find /sys/devices/platform/ -name serial ); do
						devdir="$( dirname "${node}" )"
						value="$( cat "${devdir}"/serial | wc -c )"
						#einfo "... considering '${node}' in '${devdir}' with length '${value}' ..."
						if (( 41 == value )); then
							value="$( cat "${devdir}"/bNumConfigurations )"
							#einfo "... length matches - ${value} configurations available ..."
							if (( value > 1 )); then
								einfo "Found iPhone device data at '${devdir}/'"
								found=1
								break
							fi
						fi
					done
					(( found )) || {
						eerror "Cannot locate iPhone device data in sysfs filesystem"
						unset devdir
						#return 1
					}
				fi

				if [[ -d "${devdir}" && "${devdir}" != "/" ]]; then
					local conf="$( cat "${devdir}/bConfigurationValue" )"
					local num="$( cat "${devdir}/bNumConfigurations" )"
					local uuid="$( cat "${devdir}/serial" )"
					if (( conf != num )); then
						einfo "Setting iPhone configuration for device '${IFACE}' ..."
						echo "${num}" > "${devdir}"/bConfigurationValue
					fi
					local node
					for node in $( lsusb | grep 'Apple, Inc. $' | cut -d' ' -f 2,4 | sed 's|^|/dev/bus/usb/| ; s| |/| ; s|:||' ); do
						ebegin "Adjusting owner of '${node}'"
						chown "${MUXUSER}" "${node}"
						eend $? "Failed to update device ownership - pairing may fail"
					done
					if ! ps -e 2>&1 | grep -q "$( basename "${USBMUXD}" )" >/dev/null 2>&1; then
						einfo "Starting usbmuxd ..."
						"${USBMUXD}" -U "${MUXUSER}" >/dev/null 2>&1 </dev/null &
					fi
					if [[ -x "${PAIR}" ]] ; then
						ebegin "Pairing with iPhone"
						local response="$( "${PAIR}" --uuid "${uuid}" )"
						rc=$?
						if (( rc )) && [[ -n "${response}" ]]; then
							eend ${rc} "Pairing failed: ${response}"
						fi
						unset response
					fi
				else
					ewarn "Unable to detect iphone interface"
				fi
			fi
			;;

		lxcvh*)
			local peer
			peer=`eval echo \\$peer_\${IFACE}`
			[ -n "${peer}" ] || { eend 1 "peer_${IFACE} not defined"; return 1 ; }
			[ "${peer}" = "${IFACE}" ] && { eend 1 "The value of peer_${IFACE} ('${peer}') must not be equal to ${IFACE}"; return 1 ; }
			ip link del "${IFACE}" type veth >/dev/null 2>&1
			ip link add name "${IFACE}" type veth peer name "${peer}"
			eend $? "Failed to create veth interface pair"
			return
			;;

		lvcvg*)
			return 0
			;;
	esac

	if [ -r "/proc/sys/net/ipv6/conf/default/use_tempaddr" ]; then
		if [ "$( sysctl -n net.ipv6.conf.default.use_tempaddr )" != "2" ]; then
			einfo "Enabling IPv6 temporary address usage by default"
			/sbin/sysctl -q -w net.ipv6.conf.default.use_tempaddr=2
		fi
	fi

	eend 0
	return 0
} # preup

postup() {
	[ -n "${IFACE}" ] || { eend 1 "\$IFACE not defined"; return 1 ; }
	[ "${IFACE}" = "lo" ] && { eend 0 ; return 0 ; }

	case "${IFACE}" in
		lxcvh*)
			local peer
			peer=`eval echo \$peer_${IFACE}`
			[ -n "${peer}" ] || { eend 1 "\$peer_${IFACE} not defined"; return 1 ; }
			echo "1" > "/proc/sys/net/ipv4/conf/${IFACE}/proxy_arp"
			eend $? "Failed to enable proxy_arp on ${IFACE}"
			return
			;;
		lvcvg*)
			return 0
			;;
	esac

	if [ -r "/proc/sys/net/ipv6/conf/${IFACE}/use_tempaddr" ]; then
		if [ "$( sysctl -n net.ipv6.conf.${IFACE}.use_tempaddr )" != "2" ]; then
			einfo "Enabling IPv6 temporary address usage on ${IFACE}"
			/sbin/sysctl -q -w net.ipv6.conf.${IFACE}.use_tempaddr=2
		fi
	fi

	eend 0
	return 0
} # postup
